from flask import abort, Blueprint, current_app, send_file, render_template, url_for
from flask import make_response, redirect, request

from web.cache import cache
import web.connector as connector

import uuid

faces = Blueprint('faces', __name__, template_folder='templates')

@faces.route('/')
def index():
    user_id_hash = str(uuid.uuid4())
    redirect_to_trial = redirect('/faces/trial')
    response = current_app.make_response(redirect_to_trial)  
    response.set_cookie('user_id',value=user_id_hash)
    response.set_cookie('trial_num',value=str(0))
    return response  


@faces.route('/trial')
def trial():
    # BEGINNING OF DUMMY DATA
    fakedb = []
    obj1 = {
        # experiment data
        'ProbeTime'             : 50,
        'idExperiments'         : 1,
        'idDataType_Probe'      : 1,
        'idDataType_Gallery'    : 1,

        # participant data
        'idParticipants'        : 1,
        'UUID'                  : str(uuid.uuid4()),

        # trial data
        'idTrials'              : 1,
        'ProbeID'               : 1,
        'ProbePath'             : 'http://www.saintsrescue.ca/new_site//wp-content/gallery/barn_animals_sponsorship/Brad-Pitt.jpg',
        'Gallery1ID'            : 1,
        'Gallery1Path'          : 'http://www.saintsrescue.ca/new_site//wp-content/gallery/barn_animals_sponsorship/Brad-Pitt.jpg',
        'Gallery2ID'            : 2,
        'Gallery2Path'          : 'https://images-na.ssl-images-amazon.com/images/I/91w1cLKbY-L._SX355_.jpg',
        'Gallery3ID'            : 3,
        'Gallery3Path'          : 'http://whitefencefarm-il.com/img/BarnAnimals_2.jpg'
    }

    obj2 = {
        # experiment data
        'ProbeTime'             : 50,
        'idExperiments'         : 1,
        'idDataType_Probe'      : 1,
        'idDataType_Gallery'    : 1,

        # participant data
        'idParticipants'        : 1,
        'UUID'                  : obj1['UUID'],

        # trial data
        'idTrials'              : 2,
        'ProbeID'               : 6,
        'ProbePath'             : 'http://s1.1zoom.me/big3/478/338769-sepik.jpg',
        'Gallery1ID'            : 4,
        'Gallery1Path'          : 'https://dncache-mauganscorp.netdna-ssl.com/thumbseg/1554/1554897-bigthumbnail.jpg',
        'Gallery2ID'            : 5,
        'Gallery2Path'          : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxukmqgr5IzjTfdPiyFwUamNI0QVrmq1lfgZCYO0BzF7iTU7iShA',
        'Gallery3ID'            : 6,
        'Gallery3Path'          : 'http://s1.1zoom.me/big3/478/338769-sepik.jpg'
    }

    fakedb.append(obj1)
    fakedb.append(obj2)
    # END OF DUMMY DATA

    # load session ID from cookie (do not modify it)
    user_id = request.cookies.get('user_id')
    print("User ID: "+user_id)

    # get remaining trials for session ID

    # if no remaining trials, redirect to mturk
    trial_num = int(request.cookies.get('trial_num'))
    trial_max = 2
    if (trial_num==trial_max):
        count = 0
        while(1):
            if count == 0 : print('Done!')
            count=count+1


    # else, randomly pick one, and return trial
    formatted_data= {}
    formatted_data['url1'] = '/faces/response/' + str(fakedb[trial_num]['idTrials']) + '/' +  str(fakedb[trial_num]['Gallery1ID'])
    formatted_data['url2'] = '/faces/response/' + str(fakedb[trial_num]['idTrials']) + '/' +  str(fakedb[trial_num]['Gallery2ID'])
    formatted_data['url3'] = '/faces/response/' + str(fakedb[trial_num]['idTrials']) + '/' +  str(fakedb[trial_num]['Gallery3ID'])
    formatted_data['img1'] = fakedb[trial_num]['Gallery1Path']
    formatted_data['img2'] = fakedb[trial_num]['Gallery2Path']
    formatted_data['img3'] = fakedb[trial_num]['Gallery3Path']
    formatted_data['timeout'] = str(fakedb[trial_num]['ProbeTime'])
    formatted_data['probe_image'] = fakedb[trial_num]['ProbePath']
    test = []
    test.append(formatted_data)
    return render_template('trial.html',data=test)

@faces.route('/response/<idTrials>/<GalleryID>')
def response(idTrials,GalleryID):
    # record response
    print("Question ID: {}".format(idTrials))
    print("Picture ID: {}".format(GalleryID))
    # redirect to trial
    redirect_to_trial = redirect('/faces/trial')
    response = current_app.make_response(redirect_to_trial)  
    trial_num = int(request.cookies.get('trial_num'))
    trial_num = trial_num+1
    response.set_cookie('trial_num',value=str(trial_num))
    return response 

